{
  "backgroundColor": "#1d4ed8",
  "borderColor": "{{appsmith.theme.colors.backgroundColor}}",
  "borderRadius": "0px",
  "borderWidth": "0",
  "bottomRow": 67,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{{eventsJsObject.customWidgetData()}}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "defaultModel"
    },
    {
      "key": "borderColor"
    }
  ],
  "dynamicHeight": "AUTO_HEIGHT",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    },
    {
      "key": "onAddEventClick"
    }
  ],
  "events": [
    "onResetClick",
    "onAddEventClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "5j8n0cfjmu",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 59,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 21,
  "mobileTopRow": 29,
  "needsErrorInfo": false,
  "onAddEventClick": "{{showAlert('will redirect to add event page', '');}}",
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "originalBottomRow": 67,
  "originalTopRow": 9,
  "parentColumnSpace": 17.9375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 63,
  "shouldScrollContents": true,
  "srcDoc": {
    "css": "body, html {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  font-family: Arial, sans-serif;\n}\n\n.events-container {\n  padding: 20px;\n  background: url(\"https://replicate.delivery/yhqm/GveeAfJpuDGdnJqA0grhfZeQWuedoFNTTAKvw7oF7MJkGb50E/out-0.webp\") no-repeat center center/cover;\n  min-height: 100vh;\n  box-sizing: border-box;\n}\n\n.events-heading {\n  font-size: 36px;\n  font-weight: bold;\n  color: #000; /* Black color for heading */\n  margin: 0; /* Spacing below the heading */\n}\n\n.search-box {\n  width: 50%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 20px;\n  font-size: 16px;\n  outline: none;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px; /* Spacing below header */\n}\n\n.events-list {\n  display: flex;\n  flex-direction: column;\n  gap: 10px; /* Spacing between events */\n}\n\n.event-item {\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 10px;\n  padding: 15px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n  position: relative;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-item:hover {\n  background-color: rgba(255, 255, 255, 0.9);\n  transform: scale(1.02); /* Zoom effect on hover */\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n}\n\n.event-item img {\n  width: 100px; /* Adjust size as needed */\n  height: auto;\n  border-radius: 10px;\n  flex-shrink: 0; /* Prevent image from shrinking */\n  margin-right: 20px; /* Space between image and text */\n}\n\n.event-details {\n  display: flex;\n  flex-direction: column;\n  gap: 10px; /* Spacing between items */\n  flex-grow: 1;\n  text-align: justify;\n  width: 10%;\n  margin-right: 30px;\n}\n\n.event-meta {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end; /* Align to the right */\n  gap: 5px; /* Spacing between location and date */\n}\n\n.event-item h3 {\n  font-size: 24px;\n  margin: 0;\n  color: #333;\n}\n\n.event-item p {\n  margin: 0;\n}\n\n.event-item .location,\n.event-item .date {\n  font-size: 14px;\n  color: #666;\n}\n\n.button {\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  color: #ffffff;\n  background-color: #6c757d; /* Neutral gray */\n  border: none;\n  border-radius: 20px;\n  padding: 10px 15px;\n  --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s, transform 0.2s;\n  cursor: pointer;\n  gap: 8px; /* Space between icon and text */\n}\n\n.button svg {\n  fill: #ffffff; /* Icon color */\n}\n\n.button:hover {\n  background-color: #5a6268; /* Darker neutral gray */\n  transform: translateY(-3px);\n}\n\n.button:active {\n  background-color: #545b62; /* Even darker neutral gray */\n  transform: translateY(1px);\n}\n\n.button:focus {\n  outline: none;\n  box-shadow: 0 0 0 4px rgba(108, 117, 125, 0.3); /* Neutral focus shadow */\n}",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Events Widget</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"events-container\">\n        <div class=\"header\">\n            <h1 class=\"events-heading\">Events</h1>\n\t\t\t\t\t\t<input type=\"text\" id=\"searchBox\" class=\"search-box\" placeholder=\"Search events...\">\n\t\t\t\t\t\t<button class=\"button\">\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 7V1h1v6h6v1H9v6H8V8H2V7h6z\"/>\n    </svg>\n\t\t\t\t\t\t\tAdd Event</button>\n            \n\t\t\t\t\t\t\n        </div>\n        <div id=\"eventsList\" class=\"events-list\">\n            <!-- Events will be dynamically inserted here -->\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>\n",
    "js": "appsmith.onReady(function () {\n  const eventsData = appsmith.model.events; //JSON.parse(appsmith.model.comments) : [];\n  appsmith.updateModel({\n    \"events\": eventsData\n  });\n  const events = appsmith.model.events;\n  const eventsList = document.getElementById('eventsList');\n  function renderEvents(filteredEvents) {\n    eventsList.innerHTML = ''; // Clear previous content\n    filteredEvents.forEach(event => {\n      const eventItem = document.createElement('div');\n      eventItem.classList.add('event-item');\n\n      // Conditionally render image or adjust the layout if no image\n      if (event.image) {\n        eventItem.innerHTML = `\n                    <img src=\"${event.event_image}\" alt=\"${event.eventname}\">\n                    <div class=\"event-details\">\n                        <h3>${event.title}</h3>\n                        <p>${event.description}</p>\n                    </div>\n                    <div class=\"event-meta\">\n                        <div class=\"location\">${event.location}</div>\n                        <div class=\"date\">${event.start_time}</div>\n                    </div>\n                `;\n      } else {\n        eventItem.innerHTML = `\n                    <div class=\"event-details no-image\">\n                        <h3>${event.title}</h3>\n                        <p>${event.description}</p>\n                    </div>\n                    <div class=\"event-meta\">\n                        <div class=\"location\">${event.location}</div>\n                        <div class=\"date\">${event.start_time}</div>\n                    </div>\n                `;\n      }\n      eventsList.appendChild(eventItem);\n    });\n  }\n  document.getElementById('searchBox').addEventListener('input', function (e) {\n    const query = e.target.value.toLowerCase();\n    const filteredEvents = events.filter(event => {\n      return event.title.toLowerCase().includes(query) || event.location.toLowerCase().includes(query) || event.start_time.toLowerCase().includes(query) || event.description.toLowerCase().includes(query);\n    });\n    renderEvents(filteredEvents);\n  });\n  renderEvents(events); // Initial render\n  const addEventButton = document.querySelector('.button');\n  addEventButton.addEventListener('click', function () {\n    appsmith.triggerEvent(\"onAddEventClick\");\n  });\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 9,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "body, html {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-family: Arial, sans-serif;\n}\n\n.events-container {\n    padding: 20px;\n    background: url('https://replicate.delivery/yhqm/GveeAfJpuDGdnJqA0grhfZeQWuedoFNTTAKvw7oF7MJkGb50E/out-0.webp') no-repeat center center/cover;\n    min-height: 100vh;\n    box-sizing: border-box;\n}\n\n\n\n.events-heading {\n    font-size: 36px;\n    font-weight: bold;\n    color: #000; /* Black color for heading */\n    margin: 0; /* Spacing below the heading */\n}\n\n.search-box {\n    width: 50%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 20px;\n    font-size: 16px;\n\t\toutline: none; \n}\n\n.header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px; /* Spacing below header */\n}\n\n.events-list {\n    display: flex;\n    flex-direction: column;\n    gap: 10px; /* Spacing between events */\n}\n\n.event-item {\n    background-color: rgba(255, 255, 255, 0.8);\n    border-radius: 10px;\n    padding: 15px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n    display: flex;\n    align-items: center;\n\t\tposition: relative;\n\t\ttransition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.event-item:hover {\n\t\tbackground-color: rgba(255, 255, 255, 0.9);\n    transform: scale(1.02); /* Zoom effect on hover */\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\n\t\tcursor: pointer;\n}\n\n.event-item img {\n    width: 100px; /* Adjust size as needed */\n    height: auto;\n    border-radius: 10px;\n    flex-shrink: 0; /* Prevent image from shrinking */\n    margin-right: 20px; /* Space between image and text */\n}\n\n.event-details {\n    display: flex;\n    flex-direction: column;\n    gap: 10px; /* Spacing between items */\n\t\tflex-grow: 1;\n\t\ttext-align: justify;\n\t\twidth : 10%;\n\t\tmargin-right: 30px;\n}\n\n.event-meta {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end; /* Align to the right */\n    gap: 5px; /* Spacing between location and date */\n}\n\n.event-item h3 {\n    font-size: 24px;\n    margin: 0;\n    color: #333;\n}\n\n\n.event-item p {\n    margin: 0;\n}\n\n\n.event-item .location,\n.event-item .date {\n    font-size: 14px;\n    color: #666;\n}\n\n\n\n\n.button {\n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    color: #ffffff;\n    background-color: #6c757d; /* Neutral gray */\n    border: none;\n    border-radius: 20px;\n    padding: 10px 15px;\n    --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    transition: background-color 0.3s, transform 0.2s;\n    cursor: pointer;\n    gap: 8px; /* Space between icon and text */\n}\n\n.button svg {\n    fill: #ffffff; /* Icon color */\n}\n\n.button:hover {\n    background-color: #5a6268; /* Darker neutral gray */\n    transform: translateY(-3px);\n}\n\n.button:active {\n    background-color: #545b62; /* Even darker neutral gray */\n    transform: translateY(1px);\n}\n\n.button:focus {\n    outline: none;\n    box-shadow: 0 0 0 4px rgba(108, 117, 125, 0.3); /* Neutral focus shadow */\n}\n\n\n",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Events Widget</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"events-container\">\n        <div class=\"header\">\n            <h1 class=\"events-heading\">Events</h1>\n\t\t\t\t\t\t<input type=\"text\" id=\"searchBox\" class=\"search-box\" placeholder=\"Search events...\">\n\t\t\t\t\t\t<button class=\"button\">\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\">\n        <path d=\"M8 7V1h1v6h6v1H9v6H8V8H2V7h6z\"/>\n    </svg>\n\t\t\t\t\t\t\tAdd Event</button>\n            \n\t\t\t\t\t\t\n        </div>\n        <div id=\"eventsList\" class=\"events-list\">\n            <!-- Events will be dynamically inserted here -->\n        </div>\n    </div>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>\n",
    "js": "appsmith.onReady(function() {\n\t\tconst eventsData = appsmith.model.events;\t\t\t\t\t \t\t\t      //JSON.parse(appsmith.model.comments) : [];\n\t\tappsmith.updateModel({\"events\" : eventsData});\n\n    const events = appsmith.model.events;\n\n    const eventsList = document.getElementById('eventsList');\n\n    function renderEvents(filteredEvents) {\n        eventsList.innerHTML = ''; // Clear previous content\n        filteredEvents.forEach(event => {\n            const eventItem = document.createElement('div');\n            eventItem.classList.add('event-item');\n\n            // Conditionally render image or adjust the layout if no image\n            if (event.image) {\n                eventItem.innerHTML = `\n                    <img src=\"${event.event_image}\" alt=\"${event.eventname}\">\n                    <div class=\"event-details\">\n                        <h3>${event.title}</h3>\n                        <p>${event.description}</p>\n                    </div>\n                    <div class=\"event-meta\">\n                        <div class=\"location\">${event.location}</div>\n                        <div class=\"date\">${event.start_time}</div>\n                    </div>\n                `;\n            } else {\n                eventItem.innerHTML = `\n                    <div class=\"event-details no-image\">\n                        <h3>${event.title}</h3>\n                        <p>${event.description}</p>\n                    </div>\n                    <div class=\"event-meta\">\n                        <div class=\"location\">${event.location}</div>\n                        <div class=\"date\">${event.start_time}</div>\n                    </div>\n                `;\n            }\n\n            eventsList.appendChild(eventItem);\n        });\n    }\n\n    document.getElementById('searchBox').addEventListener('input', function(e) {\n        const query = e.target.value.toLowerCase();\n        const filteredEvents = events.filter(event => {\n            return event.title.toLowerCase().includes(query) ||\n                   event.location.toLowerCase().includes(query) ||\n                   event.start_time.toLowerCase().includes(query) ||\n                   event.description.toLowerCase().includes(query);\n        });\n        renderEvents(filteredEvents);\n    });\n\n    renderEvents(events); // Initial render\n\t\tconst addEventButton = document.querySelector('.button');\n    addEventButton.addEventListener('click', function() {\n        appsmith.triggerEvent(\"onAddEventClick\");\n    });\n});\n"
  },
  "version": 1,
  "widgetId": "sehr3d6lug",
  "widgetName": "Custom1"
}